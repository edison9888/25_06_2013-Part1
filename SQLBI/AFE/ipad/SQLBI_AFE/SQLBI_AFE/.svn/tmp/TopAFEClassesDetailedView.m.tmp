//
//  TopAFEClassesDetailedView.m
//  SQLBI_AFE
//
//  Created by Sivakumar Nair on 05/08/12.
//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.
//

#import "TopAFEClassesDetailedView.h"
#import "AFEClass.h"
#import "ScrubberView.h"
#import "AFEClassesTableView.h"

@interface TopAFEClassesDetailedView (){
    NSDate *startDate;
    NSDate *endDate;
    ScrubberView *scrubberView;
    AFEClassesTableView *afeClassesTableView;
    UIView *scrubberContainerView;
    UILabel *classNameLabel;
    

}
@property (strong, nonatomic) IBOutlet UIButton *budgetButton;
@property (strong, nonatomic) IBOutlet UIButton *noOFAFEsButton;
@property (nonatomic,strong) IBOutlet XYPieChart *pieChart;
@property(nonatomic, strong) NSMutableArray *slices;
@property(nonatomic, strong) NSArray        *sliceColors;
@property(nonatomic, strong) NSMutableArray *afeClassesArray;
@property(nonatomic, assign) BOOL IsNoOfAFesButtonClicked;

-(void)drawPieChart;
- (IBAction)budgetButtonTouched:(id)sender;
- (IBAction)noOfAFEsButtonTouched:(id)sender;

@end

@implementation TopAFEClassesDetailedView

@synthesize swipeDelegate;
@synthesize pieChart,slices,sliceColors;
@synthesize budgetButton;
@synthesize noOFAFEsButton;
@synthesize afeClassesArray;
@synthesize IsNoOfAFesButtonClicked, delegate;

- (id)initWithFrame:(CGRect)frame
{
    self = (TopAFEClassesDetailedView *) [[[NSBundle mainBundle] loadNibNamed:@"TopAFEClassesDetailedView" owner:self options:nil] lastObject];
    if (self) {
            // Initialization code
        self.frame = CGRectMake(frame.origin.x, frame.origin.y, self.frame.size.width, self.frame.size.height);
        
    }
    return self;
}
-(void) refreshDataWithAFEClassesArray:(NSArray*) afeClassesArrayToUse andStartDate:(NSDate*) start andEndDate:(NSDate*) end{
    
    self.slices = [[NSMutableArray alloc] init];
    startDate = start;
    endDate = end;
    self.afeClassesArray = (NSMutableArray*) afeClassesArrayToUse;
    [self drawPieChart];
    //[self createScrubberView];
    [self createAFETableView];
    [self setCustomFontForButton:self.budgetButton];
    [self setCustomFontForButton:self.noOFAFEsButton];
    [self.budgetButton setSelected:YES];
    
    [Utility removeLeftSwipeGestureFromViewsRecursively:self];
    [Utility removeRightSwipeGestureFromViewsRecursively:self];
    [Utility addLeftSwipeGestureToViewsRecursively:self targetDelegate:self handleSelector:@selector(handleSwipeFrom:)];
    [Utility addRightSwipeGestureToViewsRecursively:self targetDelegate:self handleSelector:@selector(handleSwipeFrom:)];
    [Utility removeLeftSwipeGestureFromViewsRecursively:scrubberContainerView];
    [Utility removeRightSwipeGestureFromViewsRecursively:scrubberContainerView];
    
}

-(void) createAFETableView
{
    if(!afeClassesTableView)
        afeClassesTableView = [[AFEClassesTableView alloc]initWithFrame:CGRectMake(350, 78, 570, 462)];
    else
        [afeClassesTableView removeFromSuperview];
    
    [self addSubview:afeClassesTableView];
    afeClassesTableView.delegate = self;
    
    [afeClassesTableView refreshDataWithafeClassesArray:afeClassesArray];
}

-(void)drawPieChart{
    [self setData];
    [self  setPieChartValue];
}

- (void)removeLabelsFromView
{
    for (UILabel *label in self.subviews) {
        if([label isKindOfClass:[UILabel class]])
        {
            if([label respondsToSelector:@selector(removeFromSuperview)])
            {
                [label removeFromSuperview];
            }
        }
    }
}

-(void)setData
{
    [self.slices removeAllObjects];
    AFEClass *tempAFE = [[AFEClass alloc] init];
    if([self.afeClassesArray count]){
        
        int count = [self.afeClassesArray count];
        for(int i = 0; i< count; i++){
            tempAFE = (AFEClass*)[self.afeClassesArray objectAtIndex:i];
            NSNumber *num;
            if(IsNoOfAFesButtonClicked)
                 num = [NSNumber numberWithFloat:tempAFE.afeCount];
            else
                num = [NSNumber numberWithFloat:tempAFE.budget];
            [self.slices addObject:num];
        }
    }
    NSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc] initWithKey:@"self" ascending:NO];
    self.slices = (NSMutableArray *) [self.slices sortedArrayUsingDescriptors:[NSArray arrayWithObject:sortDescriptor]];
    NSMutableArray *tmpArray = [[NSMutableArray alloc] init];
    if([self.slices count]){
        int limit;
        if([self.slices count] > 4){
            limit = 5;
        }
        else
            limit = [self.slices count];
        for(int i =  0 ;i < limit;i++)
            [tmpArray addObject:[self.slices objectAtIndex:i]];
        self.slices = tmpArray;
    }
    [self removeLabelsFromView];
    if(classNameLabel)
        [classNameLabel removeFromSuperview];
    int xOffSet = 0;
    BOOL shouldCreateSecondLine = NO;
    for (int i = 0; i<5; i++) 
    {
        if(!(xOffSet<=190))
        {
            if(xOffSet == 190+95)
                xOffSet =0;
            shouldCreateSecondLine = YES;
        }
        if(shouldCreateSecondLine)
        {
            classNameLabel = [[UILabel alloc]initWithFrame:CGRectMake(35+xOffSet, 486, 139, 15)];
        }
        else 
        {
            classNameLabel = [[UILabel alloc]initWithFrame:CGRectMake(35+xOffSet, 460, 139, 15)];
        }
        [classNameLabel setBackgroundColor:[UIColor clearColor]];
        [classNameLabel setText:tempAFE.afeClassName];
        [classNameLabel setFont:FONT_TOP_AFE_SUMMARY_VIEW_LEGEND_BARCHART];
        xOffSet+=95;
        [self addSubview:classNameLabel];
        classNameLabel = nil;
        
    }
}

-(void)setPieChartValue{
    self.sliceColors =[NSArray arrayWithObjects:
                       [UIColor colorWithRed:246/255.0 green:155/255.0 blue:0/255.0 alpha:1],
                       [UIColor colorWithRed:129/255.0 green:195/255.0 blue:29/255.0 alpha:1],
                       [UIColor colorWithRed:62/255.0 green:173/255.0 blue:219/255.0 alpha:1],
                       [UIColor colorWithRed:229/255.0 green:66/255.0 blue:115/255.0 alpha:1], 
                       [UIColor colorWithRed:148/255.0 green:141/255.0 blue:139/255.0 alpha:1],nil];
    [self.pieChart setDelegate:self];
    [self.pieChart setDataSource:self];
    self.pieChart.labelFont = [UIFont fontWithName:COMMON_FONTNAME_BOLD size:14];
    [self.pieChart setShowPercentage:NO];
    [self.pieChart reloadData];
    
    
}

-(void) createScrubberView
{
    
    if(!scrubberContainerView)
    {
        scrubberContainerView = [[UIView alloc] initWithFrame:CGRectMake(0, 495, 420, 68)];
    }
    else
    {
        [scrubberContainerView removeFromSuperview];
        [scrubberContainerView.subviews makeObjectsPerformSelector:@selector(removeFromSuperview)];
    }
    
    scrubberContainerView.backgroundColor = [UIColor clearColor];
    [self addSubview:scrubberContainerView];
    
    if(!scrubberView)
    {
        scrubberView = [[ScrubberView alloc] initWithFrame:CGRectMake(20, 30, 315, 13)];
    }
    else
        [scrubberView removeFromSuperview];
    
    [[NSUserDefaults standardUserDefaults] setObject:startDate?startDate:[NSDate dateWithTimeInterval:-3600*24*20 sinceDate:[NSDate date]] forKey:@"AFEStartDate"];
    [[NSUserDefaults standardUserDefaults] setObject:endDate?endDate:[NSDate dateWithTimeInterval:-3600*24*10 sinceDate:[NSDate date]] forKey:@"AFEEndDate"];
    
    [scrubberView reloadScrubberFromStartDateKey:@"AFEStartDate" andEndDateKey:@"AFEEndDate" forMaximumEndDateOfAvailableRange:[NSDate date] andMaximumDaysAllowedInGraphDateRange:30];
    
    [scrubberContainerView addSubview:scrubberView];
    
}

#pragma mark -
#pragma mark - XYPieChart Data Source

- (NSUInteger)numberOfSlicesInPieChart:(XYPieChart *)pieChart
{
    return self.slices.count;
}

- (CGFloat)pieChart:(XYPieChart *)pieChart valueForSliceAtIndex:(NSUInteger)index
{
    return [[self.slices objectAtIndex:index] intValue];
}

- (UIColor *)pieChart:(XYPieChart *)pieChart colorForSliceAtIndex:(NSUInteger)index
{
        // if(pieChart == self.pieChartRight) return nil;
    return [self.sliceColors objectAtIndex:(index % self.sliceColors.count)];
}

#pragma mark - XYPieChart Delegate
- (void)pieChart:(XYPieChart *)pieChart didSelectSliceAtIndex:(NSUInteger)index
{
    NSLog(@"did select slice at index %d",index);
}
- (IBAction)budgetButtonTouched:(id)sender
{
    [[NSUserDefaults standardUserDefaults] setInteger:0 forKey:@"SET_DOLAR"];
    [self.noOFAFEsButton setSelected:self.budgetButton.selected];
    [self.budgetButton setSelected:!self.budgetButton.selected];
    [self.budgetButton setUserInteractionEnabled:NO];
    [self.noOFAFEsButton setUserInteractionEnabled:YES];
        
    NSSortDescriptor *aSortDescriptor = [NSSortDescriptor sortDescriptorWithKey:@"budget" ascending:NO comparator:^(id obj1, id obj2) 
    {
                     
            if ([obj1 integerValue] > [obj2 integerValue]) {
                return (NSComparisonResult)NSOrderedDescending;
            }
            if ([obj1 integerValue] < [obj2 integerValue]) {
                return (NSComparisonResult)NSOrderedAscending;
            }
            return (NSComparisonResult)NSOrderedSame;
        }];
         NSMutableArray *sortedArray;
         sortedArray = [NSMutableArray arrayWithArray:[self.afeClassesArray sortedArrayUsingDescriptors:[NSArray arrayWithObject:aSortDescriptor]]];
    self.afeClassesArray = sortedArray;
    [afeClassesTableView refreshDataWithafeClassesArray:self.afeClassesArray];
    
        
    IsNoOfAFesButtonClicked = NO;
    [self drawPieChart];
}
- (IBAction)noOfAFEsButtonTouched:(id)sender
{
    [[NSUserDefaults standardUserDefaults] setInteger:1 forKey:@"SET_DOLAR"];
    [self.budgetButton setSelected:self.noOFAFEsButton.selected];
    [self.noOFAFEsButton setSelected:!self.noOFAFEsButton.selected];
    [self.noOFAFEsButton setUserInteractionEnabled:self.noOFAFEsButton.selected];
    [self.noOFAFEsButton setUserInteractionEnabled:NO];
    [self.budgetButton setUserInteractionEnabled:YES];
    
    NSSortDescriptor *aSortDescriptor = [NSSortDescriptor sortDescriptorWithKey:@"afeCount" ascending:YES comparator:^(id obj1, id obj2) 
                                         {
                                             
                                             if ([obj1 integerValue] > [obj2 integerValue]) {
                                                 return (NSComparisonResult)NSOrderedDescending;
                                             }
                                             if ([obj1 integerValue] < [obj2 integerValue]) {
                                                 return (NSComparisonResult)NSOrderedAscending;
                                             }
                                             return (NSComparisonResult)NSOrderedSame;
                                         }];
    NSMutableArray *sortedArray;
    sortedArray = [NSMutableArray arrayWithArray:[self.afeClassesArray sortedArrayUsingDescriptors:[NSArray arrayWithObject:aSortDescriptor]]];
    self.afeClassesArray = sortedArray;
    [afeClassesTableView refreshDataWithafeClassesArray:self.afeClassesArray];
    
    IsNoOfAFesButtonClicked = YES;
    [self drawPieChart];
}

- (void)handleSwipeFrom:(UISwipeGestureRecognizer *)recognizer {
    
    //[self setUserInteractionEnabled:NO];
    if (recognizer.direction == UISwipeGestureRecognizerDirectionLeft) {
        if(self.swipeDelegate && [self.swipeDelegate respondsToSelector:@selector(didSwipeLeftOnTopAFEClassesDetailedView:)])
        {
            
            if(recognizer.view !=scrubberContainerView)
            [self.swipeDelegate didSwipeLeftOnTopAFEClassesDetailedView:self];
        }
    }
    else if (recognizer.direction == UISwipeGestureRecognizerDirectionRight) {
        if(self.swipeDelegate && [self.swipeDelegate respondsToSelector:@selector(didSwipeRightOnTopAFEClassesDetailedView:)])
        {
            if(recognizer.view != scrubberContainerView)
            [self.swipeDelegate didSwipeRightOnTopAFEClassesDetailedView:self];
        }
    }
}

#pragma mark - AFE Classes Table View Delegate
-(void) didSelectAFEClassObjectForMoreDetais:(AFEClass *)afeClassObj OnAFEClassesTableView:(AFEClassesTableView *)tableView
{
    
    if(self.delegate && [self.delegate respondsToSelector:@selector(didSelectTheAFEClassToSeeListOfAFEs:)])
    {
        [self.delegate didSelectTheAFEClassToSeeListOfAFEs:afeClassObj];
    }
    
}

-(void) dealloc
{
    self.swipeDelegate = nil;
    startDate = nil;
    endDate = nil;
    scrubberView = nil;
    afeClassesTableView = nil;
    classNameLabel = nil;
}

-(void) setCustomFontForButton:(UIButton *)button
{
    button.titleLabel.font = FONT_DASHBOARD_BUTTON_DEFAULT_LABEL;
        
    [button setTitleColor:[Utility getUIColorWithHexString:@"ffffff"] forState:UIControlStateNormal];
    [button setBackgroundImage:[UIImage imageNamed:@"buttonDark"] forState:UIControlStateNormal];
    
    [button setTitleColor:[Utility getUIColorWithHexString:@"192835"] forState:UIControlStateHighlighted];
    [button setBackgroundImage:[UIImage imageNamed:@"buttonLight"] forState:UIControlStateHighlighted];
    
    [button setTitleColor:[Utility getUIColorWithHexString:@"192835"] forState:UIControlStateSelected];
    [button setBackgroundImage:[UIImage imageNamed:@"buttonLight"] forState:UIControlStateSelected];
 
    [button.titleLabel setShadowColor:[UIColor whiteColor]];
    [button.titleLabel setShadowOffset:CGSizeMake(0, 1)];
    
}


@end
