//
//  TDMCustomTabBar.m
//  TheDailyMeal
//
//  Created by Nithin George on 06/01/12.
//  Copyright (c) 2012 Rapid Value Solutions. All rights reserved.
//


#import "TDMCustomTabBar.h"
#import <QuartzCore/QuartzCore.h>
#import "TDMBarsViewController.h"
#import "TDMRestaurantsViewController.h"
#import "TDMSignatureDishViewController.h"
#import "TDMFavoritesViewController.h"
#import "TDMChannelsViewController.h"
#import "TDMCityGuidesViewController.h"
#import "TDMAddSignatureDishViewController.h"
#import "Reachability.h"
#import "TDMCityGuideListOfCitiesHandler.h"


#define BARVIEWCONTROLLER_NIB_NAME        @"TDMBarsViewController"
#define RESTAURANTVIEWCONTROLLER_NIB_NAME @"TDMRestaurantsViewController"
#define SIGNATUREDISHCONTROLLER_NIB_NAME  @"TDMSignatureDishViewController"
#define FAVOURITEVIEWCONTROLLER_NIB_NAME  @"TDMFavoritesViewController"
#define CHANNEL_CONTROLLER_NIB_NAME       @"TDMChannelsViewController"
#define CITYGUIDE_CONTROLLER_NIB_NAME     @"TDMCityGuidesViewController"
#define ADDSIGNATURE_DISH_CONTROLLER_NIB_NAME     @"TDMAddSignatureDishViewController"

#define CHANNEL_SECTION_IMAGE @"ChannelTableSection.png"
#define TABBAR_SELECTED_IMAGE @"TabBarSelected"

#define PREVIOUSLY_SELECTED_TAB_ID @"previouslySelectedTab"

#define MORE_FAV_ROW_COUNT 1


//TAB BAR ITEMS
#define DEFAULT_TAB_COUNT 5

#define TAB_X 7
#define TAB_Y 10
#define ADD_DISH_BUTTON_Y 3

#define TAB_X_SPACE 65;

#define TAB_WIDTH 44
#define TAB_HEIGHT 34
#define ADD_DISH_BUTTON_HIGHT 55

#define TABBAR_TAG 100
#define ROOT_TAB_NAME @"TabItems"

#define TAB_IMAGE_TYPE @"png"

#define TAB_NAME @"tabName"
#define NAVIGATION_NAME @"navigationName"

#define ICON_NORMAL @"iconNormal"

#define ICON_SELECT @"iconSelect"

#define kARRAY_OF_BAR_NAMES [NSArray arrayWithObjects:@"Bars",@"Restaurants",@"Add Dish",@"Best Dishes",@"More",nil]

//table

#define MORE_SECSSION_COUNT 3

//animation
#define ANIMATION_RIGHT @"right"
#define ANIMATION_LEFT  @"left"
#define SWIPE_ANIMATION_KEY @"swipeAnimation"

#define BUTTON_TITLE_RECT CGRectMake(tabX - 5, 45, 55, 10)
#define WISH_LIST_RECT CGRectMake(0,0,320,40)
#define WISH_LIST_TITLE_FRAME CGRectMake(15,15,100,21)
#define IMAGE_FRAME CGRectMake(100,10,25,25)

@interface TDMCustomTabBar (Private)

- (void)customizeTabBarView;
- (void)loadTabBarItems;
- (void)addMoreView;
- (void)tabItemPressed:(UIButton *)tab;
- (void)startAnimation:(CGRect)rect uiview:(UIView *)animatedView;

- (UIView *)addWishList;

@end


@implementation TDMCustomTabBar

@synthesize listOfCities;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}


- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}



#pragma mark - View lifecycle

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    [self customizeTabBarView];
    [self loadTabBarItems]; 
    UIButton *addDishSelectedButton = (UIButton*)[customTabItems objectAtIndex:kADD_DISH_TABBAR_INDEX];
    [self tabItemPressed:addDishSelectedButton];
    [self setSelectedIndex:kSIGNATUE_DISH_TABBAR_INDEX];
    TDMCityGuideListOfCitiesHandler *tdmlistofCites  =[[TDMCityGuideListOfCitiesHandler alloc]init];
    
    
    [tdmlistofCites getListOfCitiesForVenueID:27 andParent:0];
    tdmlistofCites.listOfCitiesHandler = self;
    //[tdmlistofCites release];
    
}


#pragma mark - Customize TabBar

-(void)customizeTabBarView{
    
    customTabItems=[[NSMutableArray alloc]init];
    
    tabBarView=[[UIView alloc] initWithFrame:CGRectMake(self.tabBar.frame.origin.x, self.view.frame.size.height-58, self.tabBar.frame.size.width ,  self.tabBar.frame.size.height)];
    tabBarView.tag=TABBAR_TAG;
    tabBarView.backgroundColor=[UIColor clearColor];
    
    UIImageView *tabbarBackgroundView=[[UIImageView alloc] initWithFrame:CGRectMake(0, 0, self.tabBar.frame.size.width ,  (self.tabBar.frame.size.height + 9))];
    tabbarBackgroundView.image = kTABBAR_BACKGROUND_IMAGE;
    tabbarBackgroundView.backgroundColor=[UIColor clearColor];
    //tabbarBackgroundView.contentMode = UIViewContentModeScaleToFill;
    [tabBarView addSubview:tabbarBackgroundView];
    [tabbarBackgroundView release];
    tabbarBackgroundView=nil;
    
    int tabX=TAB_X;
    
    //load custom tabs
    for (int tab=0; tab<DEFAULT_TAB_COUNT; tab++) {
        
        NSString *normalIconSelectedImagePath=[NSString stringWithFormat:@"iconSelected%d",tab];
        UIButton *btnTab=[[UIButton alloc]init];
        if (kADD_DISH_TABBAR_INDEX == tab) {
            
            btnTab.frame=CGRectMake(tabX + 3 , ADD_DISH_BUTTON_Y, 42, 42);
        }
        else
        {
            btnTab.frame=CGRectMake(tabX, TAB_Y, TAB_WIDTH, TAB_HEIGHT);
        }
        
        [btnTab setTitleEdgeInsets:UIEdgeInsetsMake(20, 10.0, 0.0, 0.0)];
        btnTab.backgroundColor=[UIColor clearColor];
        [btnTab setTag:tab];

        NSLog(@"Button Tab Frame %f %f",btnTab.frame.size.width,btnTab.frame.size.height);
        
        NSString *normalIconImagePath=[NSString stringWithFormat:@"iconNormal%d",tab];
        
        
        
        [btnTab setBackgroundImage:[UIImage imageWithContentsOfFile:[[NSBundle mainBundle]pathForResource:normalIconImagePath ofType:TAB_IMAGE_TYPE]] forState:UIControlStateNormal];

       
        
        [btnTab setBackgroundImage:[UIImage imageWithContentsOfFile:[[NSBundle mainBundle]pathForResource:normalIconSelectedImagePath ofType:TAB_IMAGE_TYPE]] forState:UIControlStateSelected];     
       
        if (kADD_DISH_TABBAR_INDEX == tab){ 
            [btnTab setSelected:TRUE];
            //[btnTab setAlpha:1.0];
        }
        [btnTab addTarget:self action:@selector(tabItemPressed:) forControlEvents:UIControlEventTouchUpInside];
        [tabBarView addSubview:btnTab];
        [customTabItems addObject:btnTab];
        [btnTab release];
        btnTab=nil;
        UILabel *buttonTitle = [[UILabel alloc]initWithFrame:BUTTON_TITLE_RECT];
        buttonTitle.backgroundColor = [UIColor clearColor];
        buttonTitle.font=[UIFont fontWithName:@"Helvetica-Bold" size:9.0];
        buttonTitle.textColor = [UIColor whiteColor]; ;
        buttonTitle.textAlignment = UITextAlignmentCenter;
        buttonTitle.text     = [kARRAY_OF_BAR_NAMES objectAtIndex:tab];
        [tabBarView addSubview:buttonTitle];
        REMOVE_FROM_MEMORY(buttonTitle);
        
        tabX=tabX+TAB_X_SPACE;
    }
    
    [self.view addSubview:tabBarView];
    [tabBarView release];
    //tabBarView=nil;
    
}

-(void)tabItemPressed:(UIButton *)tab 
{
    
    [tab setSelected:TRUE];
    //[tab setAlpha:1.0];
    for (UIButton *tabItem in customTabItems) 
    {
        if (tabItem.tag!=tab.tag){ 
            [tabItem setSelected:FALSE];
            //[tabItem setAlpha:0.6];
            // tabItem.backgroundColor = [UIColor clearColor];
        }
        
    }
     
    if (tab.tag == kWISH_LIST_TABBAR_INDEX) 
    {
        
        if (!moreView) {
            
            [self addMoreView];
        }
 
    }
    else
    {
        NSLog(@"%d",tab.tag);
        [[NSUserDefaults standardUserDefaults] setInteger:tab.tag  forKey:PREVIOUSLY_SELECTED_TAB_ID];
        
        if (moreView) {
            
            REMOVE_FROM_MEMORY(moreView)
        }
        self.selectedIndex=tab.tag; 
        NSArray *navigationsResultArray = self.viewControllers;
        UINavigationController *navigationcontroller = [navigationsResultArray objectAtIndex:tab.tag];
        [navigationcontroller popToRootViewControllerAnimated:YES];
        [self setSelectedIndex:tab.tag];
    }
    
//    if (tab.tag == kRESTAURANTS_TABBAR_INDEX ) {
//        
//        TDMAppDelegate * delegate = (TDMAppDelegate*)[UIApplication sharedApplication].delegate;
//        [delegate startGPSScan];
//        delegate.delegate = self;
//    }
}


#pragma mark- add more view

- (void)addMoreView
{
    [self loadTabBarItems];
    
    moreView                    = [[UIView alloc]initWithFrame:CGRectMake(400,0, 500,500)];
    moreView.backgroundColor    = [UIColor clearColor];
    
    moreTable      = [[UITableView alloc]initWithFrame:CGRectMake(50,15, 270,470)];
    moreTable.backgroundColor    = [UIColor colorWithRed:((float)77.0)/255.0 
                                                   green:((float)80.0)/255.0 
                                                    blue:((float)93.0)/255.0 alpha:1.0];
    moreTable.showsVerticalScrollIndicator = NO;
    moreTable.delegate          = self;    
    moreTable.dataSource        = self;
    moreTable.tag = 113;
    moreTable.scrollEnabled     = YES;
    
    UIButton *button = [UIButton buttonWithType:5];
    button.frame = CGRectMake(0,0, 50,500);
    button.backgroundColor = [UIColor clearColor];
    [button addTarget:self action:@selector(removeMoreViewButtonClicked:) forControlEvents:UIControlEventTouchUpInside];
    
    [moreView addSubview:button];
    [moreView addSubview:moreTable];
    [self.view addSubview:moreView];
    
    CGRect rect = CGRectMake(0,0, 320,500);
    [self startAnimation:rect uiview:moreView];
  
}

#pragma mark - Button Actions

- (void)removeMoreViewButtonClicked:(id)sender
{
  
    CGRect rect = CGRectMake(400,0, 250,500);
    [self startAnimation:rect uiview:moreView];
    [self performSelector:@selector(removeView:) withObject:moreView afterDelay:0.6];
    
    int index = [[NSUserDefaults standardUserDefaults]  integerForKey:PREVIOUSLY_SELECTED_TAB_ID];
    UIButton *dishSelectedButton = (UIButton*)[customTabItems objectAtIndex:index];
    [self tabItemPressed:dishSelectedButton];
    
}

- (void)removeView:(UIView *)currentView
{
    [currentView removeFromSuperview];
    REMOVE_FROM_MEMORY(moreView);
}

- (void)startAnimation:(CGRect )rect uiview:(UIView *)animatedView
{
    [UIView beginAnimations:nil context:NULL];
    [UIView setAnimationDuration:0.6];
    animatedView.frame  = rect;
    [UIView commitAnimations];
}



#pragma mark -
#pragma mark TabBarItems Loading methods

- (void)loadTabBarItems{
    
    //Array for storing the TabBAr Items
    NSMutableArray *tabItems=[[NSMutableArray alloc] init];
    
    //TabBar item -Bar    
    TDMBarsViewController *barViewController=[[TDMBarsViewController alloc]initWithNibName:BARVIEWCONTROLLER_NIB_NAME bundle:nil];
    
    TDMNavigationController *barNavigationController=[[TDMNavigationController alloc]initWithRootViewController:barViewController];
    [tabItems addObject:barNavigationController];
    
    REMOVE_FROM_MEMORY(barViewController)
    REMOVE_FROM_MEMORY(barNavigationController)
    
    //TabBar item -Restaurant
    
    TDMRestaurantsViewController *restaurantsViewController=[[TDMRestaurantsViewController alloc]initWithNibName:RESTAURANTVIEWCONTROLLER_NIB_NAME bundle:nil];
    TDMNavigationController *restaurantNavigationController=[[TDMNavigationController alloc]initWithRootViewController:restaurantsViewController];
    
    [tabItems addObject:restaurantNavigationController];
    
    REMOVE_FROM_MEMORY(restaurantsViewController)
    REMOVE_FROM_MEMORY(restaurantNavigationController)
    
    
    //TabBar item -Add Dishes
    
    TDMAddSignatureDishViewController *AddSignatureDishViewController=[[TDMAddSignatureDishViewController alloc]initWithNibName:ADDSIGNATURE_DISH_CONTROLLER_NIB_NAME bundle:nil];
    AddSignatureDishViewController.businessType = 1;
    TDMNavigationController *addSignatureDishNavigationController=[[TDMNavigationController alloc]initWithRootViewController:AddSignatureDishViewController];
    
    [tabItems addObject:addSignatureDishNavigationController];
    
    REMOVE_FROM_MEMORY(AddSignatureDishViewController)
    REMOVE_FROM_MEMORY(addSignatureDishNavigationController)
    
    //TabBar item -Signature Dishes    
    
    TDMSignatureDishViewController *signatureDishViewController=[[TDMSignatureDishViewController alloc]initWithNibName:SIGNATUREDISHCONTROLLER_NIB_NAME bundle:nil];
    TDMNavigationController *signatureDishNavigationController=[[TDMNavigationController alloc]initWithRootViewController:signatureDishViewController];
    [tabItems addObject:signatureDishNavigationController];
    
    REMOVE_FROM_MEMORY(signatureDishViewController)
    REMOVE_FROM_MEMORY(signatureDishNavigationController)
    
    //TabBar item -Favourite
    
    TDMFavoritesViewController *favoritesViewController=[[TDMFavoritesViewController alloc]initWithNibName:FAVOURITEVIEWCONTROLLER_NIB_NAME bundle:nil];
    TDMNavigationController *favouriteNavigationController=[[TDMNavigationController alloc]initWithRootViewController:favoritesViewController];
    [tabItems addObject:favouriteNavigationController];
    
    REMOVE_FROM_MEMORY(favoritesViewController)
    REMOVE_FROM_MEMORY(favouriteNavigationController)
    
    
    //Tabbar Channels
    TDMCityGuidesViewController *cityGuidesViewController = [[TDMCityGuidesViewController alloc]initWithNibName:CITYGUIDE_CONTROLLER_NIB_NAME bundle:nil];
    TDMNavigationController *cityGuideNavigationController=[[TDMNavigationController alloc]initWithRootViewController:cityGuidesViewController];
    [tabItems addObject:cityGuideNavigationController];
    
    REMOVE_FROM_MEMORY(cityGuidesViewController)
    REMOVE_FROM_MEMORY(cityGuideNavigationController)
    
    //Tabbar Channels
    TDMChannelsViewController *channelsViewController = [[TDMChannelsViewController alloc]initWithNibName:CHANNEL_CONTROLLER_NIB_NAME bundle:nil];
    TDMNavigationController *channelsNavigationController=[[TDMNavigationController alloc]initWithRootViewController:channelsViewController];
    [tabItems addObject:channelsNavigationController];
    
    REMOVE_FROM_MEMORY(channelsViewController)
    REMOVE_FROM_MEMORY(channelsNavigationController)
    
    //Adding to the TabBAr
    self.viewControllers=tabItems;
    
    REMOVE_FROM_MEMORY(tabItems)   
    
}

#pragma mark -
#pragma mark Table view data source

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath	
{
    return 50;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    
    return MORE_SECSSION_COUNT;
}


- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    if (section == FIRST_SECTION) {
        
        return MORE_FAV_ROW_COUNT;
    }
    else if (section == SECOND_SECTION)
    {
         return [kARRAY_OF_CITYGUIDE_NAMES count];
    }
    else if (section == THIRD_SECTION)
    {
        return [kARRAY_OF_CHANNEL_NAMES count]-1;
    }
    return 0;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    int heightForHeader = 0;
    
    if (section != FIRST_SECTION) 
    {
        heightForHeader = 20;
    }
    
    return heightForHeader;
}


- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section 
{
    UIView *headerView = nil;
    
    if (section != FIRST_SECTION) 
    {
        CGRect rect = CGRectMake(0, 0, tableView.frame.size.width, 20);
        headerView = [[[UIView alloc] initWithFrame:rect] autorelease];
        headerView.backgroundColor  = [UIColor clearColor];
        UIImageView *headerImage    = [[UIImageView alloc] initWithImage:[UIImage imageNamed:CHANNEL_SECTION_IMAGE]];
        headerImage.frame           = rect;
        headerImage.backgroundColor = [UIColor clearColor];
        headerImage.alpha           = .9;
        
        UILabel *headerTitle        = [[UILabel alloc] initWithFrame:CGRectMake(10, 0, tableView.frame.size.width, 20)];
        headerTitle.textColor       = [UIColor grayColor];
        headerTitle.font            = kGET_BOLD_FONT_WITH_SIZE(15);
        headerTitle.text            = [kARRAY_OF_SECTIONHEADING_NAMES objectAtIndex:section - 1];
        headerTitle.backgroundColor = [UIColor clearColor];
        headerTitle.textAlignment   = UITextAlignmentLeft;
        [headerImage addSubview:headerTitle];
        [headerTitle release];
        headerTitle=nil;
        
        [headerView addSubview:headerImage];
        [headerImage release];
        headerImage = nil;
    }

    return headerView;
}

- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath {
     
    [cell setBackgroundColor:[UIColor colorWithRed:((float)77.0)/255.0 green:((float)80.0)/255.0 blue:((float)93.0)/255.0 alpha:1.0]];
    [tableView setSeparatorColor:[UIColor colorWithRed:((float)43.0)/255.0 green:((float)49.0)/255.0 blue:((float)64.0)/255.0 alpha:1.0]];

}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    static NSString *CellIdentifier = @"Cell";
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] autorelease];
    }
    

    cell.selectionStyle = UITableViewCellSelectionStyleGray;
    cell.textLabel.font = kGET_REGULAR_FONT_WITH_SIZE(15);
    cell.textLabel.textColor    = [UIColor whiteColor];
    
    if ([cell.contentView subviews]){
        for (UIView *subview in [cell.contentView subviews]) {
            [subview removeFromSuperview];
        }
    }
    
    cell.textLabel.text = nil;
    cell.accessoryType = UITableViewCellAccessoryNone;
    
    if (indexPath.section == FIRST_SECTION) {
        
        [cell.contentView addSubview:[self addWishList]];
        
    }
    else if (indexPath.section == SECOND_SECTION)
    {
        cell.textLabel.text = [kARRAY_OF_CITYGUIDE_NAMES objectAtIndex:indexPath.row];
    }
    else if (indexPath.section == THIRD_SECTION)
    {
        cell.textLabel.text = [kARRAY_OF_CHANNEL_NAMES objectAtIndex:indexPath.row];
    }
    
    return cell;
}


- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
    CGRect rect = CGRectMake(400,0, 250,500);
    [self startAnimation:rect uiview:moreView];
    
    [[NSUserDefaults standardUserDefaults] setInteger:kCHANNEL_TABBAR_INDEX  forKey:PREVIOUSLY_SELECTED_TAB_ID];

    
    if (indexPath.section == FIRST_SECTION) {
        
        [self setSelectedIndex:kWISH_LIST_TABBAR_INDEX];
    }
    else if (indexPath.section == SECOND_SECTION)
    {
        [self setSelectedIndex:kCITY_GUIDE_TABBAR_INDEX];
        [[NSUserDefaults standardUserDefaults]setInteger:indexPath.row forKey:@"tabelindexselectedforcity"];
    }
    else if (indexPath.section == THIRD_SECTION)
    {
        if (![Reachability connected]) {
            
            kSHOW_ALERT_WITH_MESSAGE(TDM_TITLE, NO_NETWORK_CONNECTIVITY);
        }
        else
        {
            [[NSUserDefaults standardUserDefaults] setInteger:indexPath.row  forKey:SELECTED_CHANNEL_CATEGORY_ID_KEY];
            [self setSelectedIndex:kCHANNEL_TABBAR_INDEX]; 
        }
    }
       
    [self performSelector:@selector(removeView:) withObject:moreView afterDelay:0.6];
}


- (UIView *)addWishList
{
    UIView *moreListView = [[[UIView alloc]initWithFrame:WISH_LIST_RECT] autorelease];
    //moreListView.backgroundColor = [UIColor redColor];
    [moreListView setBackgroundColor:[UIColor colorWithRed:((float)77.0)/255.0 green:((float)80.0)/255.0 blue:((float)93.0)/255.0 alpha:1.0]];
       
    // Heading
    UILabel *heading=[[UILabel alloc]initWithFrame:WISH_LIST_TITLE_FRAME];
    heading.textColor       = [UIColor whiteColor];
    heading.font = kGET_BOLD_FONT_WITH_SIZE(15);
    heading.backgroundColor  = [UIColor clearColor];
    heading.textAlignment=UITextAlignmentLeft;
    heading.text= @"Wish List";
    [moreListView addSubview:heading];
    [heading release];
    heading = nil;
    
    //ImgPath
    NSString *imgPath = [[NSBundle mainBundle] pathForResource:@"business2"                                                                         
                                                             ofType:@"png"];
    UIImage *image   = [UIImage imageWithContentsOfFile:imgPath];
    UIImageView *wishListImageThumbnail=[[UIImageView alloc]init];
    wishListImageThumbnail.frame=IMAGE_FRAME;
    wishListImageThumbnail.backgroundColor=[UIColor clearColor];
    wishListImageThumbnail.userInteractionEnabled = NO;
    wishListImageThumbnail.image    = image;
    [moreListView addSubview:wishListImageThumbnail];
    [wishListImageThumbnail release];
    wishListImageThumbnail = nil;
    
    return moreListView;
}

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

#pragma mark- GPRS Delegates
- (void)currentLocationDidSaved:(CLLocation*)location 
{
//    double currentLatitue = location.coordinate.latitude;
//    double currentLogitude = location.coordinate.longitude;
//        
}


-(void)tabBar:(UITabBar *)tabBar didSelectItem:(UITabBarItem *)item {
    
}
#pragma mark- city list delegate
-(void)gotListOfCites
{
    
}
-(void)gotNoCites
{
    
}
-(void)requestFailed
{
    
}
@end
